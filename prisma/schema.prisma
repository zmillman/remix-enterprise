generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

/// An organization with data (each organization's data must be isolated)
model Organization {
  id     String @id @default(uuid()) @db.Uuid
  domain String @unique

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  users User[]
}

/// A user of the app
model User {
  id             String  @id @default(uuid()) @db.Uuid
  organizationId String  @db.Uuid
  name           String
  email          String  @unique
  // URL of a photo for the user
  image          String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  organization Organization @relation(fields: [organizationId], references: [id], onDelete: Cascade)

  accounts UserAccount[]
}

/// User's authentication provider account
model UserAccount {
  userId            String    @db.Uuid
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String
  expires_at        DateTime?
  token_type        String?
  scope             String?
  id_token          String?
  // session_state     String? // unclear if this is used by any providers

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@id([provider, providerAccountId])
}
